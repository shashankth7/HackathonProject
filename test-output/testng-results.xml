<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="5" ignored="0" total="21" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="345280" started-at="2020-10-24T17:49:37 IST" finished-at="2020-10-24T17:55:22 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="345280" started-at="2020-10-24T17:49:37 IST" finished-at="2020-10-24T17:55:22 IST">
      <class name="TestCases.Test1">
        <test-method status="FAIL" signature="VerifycarloanData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.Test1@101df177]" name="VerifycarloanData" duration-ms="10957" started-at="2020-10-24T17:49:37 IST" data-provider="carloan" finished-at="2020-10-24T17:49:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1,19,80,559] but found [0.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1,19,80,559] but found [0.0]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at TestCases.Test1.VerifycarloanData(Test1.java:45)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifycarloanData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4582" started-at="2020-10-24T17:49:48 IST" finished-at="2020-10-24T17:49:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="VerifycarloanData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.Test1@101df177]" name="VerifycarloanData" duration-ms="9361" started-at="2020-10-24T17:49:53 IST" data-provider="carloan" finished-at="2020-10-24T17:50:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[3000000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[71,88,335]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifycarloanData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4124" started-at="2020-10-24T17:50:02 IST" finished-at="2020-10-24T17:50:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="FAIL" signature="VerifycarloanData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.Test1@101df177]" name="VerifycarloanData" duration-ms="22999" started-at="2020-10-24T17:50:06 IST" data-provider="carloan" finished-at="2020-10-24T17:50:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1000000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12,14,942]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1,05,52,50,000] but found [12,14,942]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1,05,52,50,000] but found [12,14,942]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at TestCases.Test1.VerifycarloanData(Test1.java:45)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifycarloanData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4114" started-at="2020-10-24T17:50:29 IST" finished-at="2020-10-24T17:50:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="VerifycarloanData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.Test1@101df177]" name="VerifycarloanData" duration-ms="9438" started-at="2020-10-24T17:50:33 IST" data-provider="carloan" finished-at="2020-10-24T17:50:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1000000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12,72,786]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifycarloanData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4351" started-at="2020-10-24T17:50:43 IST" finished-at="2020-10-24T17:50:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="VerifycarloanData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.Test1@101df177]" name="VerifycarloanData" duration-ms="12258" started-at="2020-10-24T17:50:47 IST" data-provider="carloan" finished-at="2020-10-24T17:50:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1200000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12,99,720]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifycarloanData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4346" started-at="2020-10-24T17:50:59 IST" finished-at="2020-10-24T17:51:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="VerifycarloanData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.Test1@101df177]" name="VerifycarloanData" duration-ms="10053" started-at="2020-10-24T17:51:04 IST" data-provider="carloan" finished-at="2020-10-24T17:51:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1300000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[720.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1,09,22,579]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifycarloanData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4119" started-at="2020-10-24T17:51:14 IST" finished-at="2020-10-24T17:51:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="VerifycarloanData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.Test1@101df177]" name="VerifycarloanData" duration-ms="11047" started-at="2020-10-24T17:51:18 IST" data-provider="carloan" finished-at="2020-10-24T17:51:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1300000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[13,86,041]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifycarloanData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4345" started-at="2020-10-24T17:51:29 IST" finished-at="2020-10-24T17:51:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="VerifycarloanData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.Test1@101df177]" name="VerifycarloanData" duration-ms="9594" started-at="2020-10-24T17:51:33 IST" data-provider="carloan" finished-at="2020-10-24T17:51:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1250000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[90,06,969]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifycarloanData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4352" started-at="2020-10-24T17:51:43 IST" finished-at="2020-10-24T17:51:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="VerifyhomeloanemiData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:TestCases.Test1@101df177]" name="VerifyhomeloanemiData" duration-ms="12128" started-at="2020-10-24T17:51:47 IST" data-provider="homeloanemi" finished-at="2020-10-24T17:51:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0.25]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0.05]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[2500.0]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[₹ 2,500]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyhomeloanemiData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4340" started-at="2020-10-24T17:51:59 IST" finished-at="2020-10-24T17:52:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="VerifyhomeloanemiData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:TestCases.Test1@101df177]" name="VerifyhomeloanemiData" duration-ms="11743" started-at="2020-10-24T17:52:04 IST" data-provider="homeloanemi" finished-at="2020-10-24T17:52:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0.25]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0.05]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[2500.0]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[₹ 6,00,005]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyhomeloanemiData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4122" started-at="2020-10-24T17:52:15 IST" finished-at="2020-10-24T17:52:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="FAIL" signature="VerifyhomeloanemiData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:TestCases.Test1@101df177]" name="VerifyhomeloanemiData" duration-ms="11034" started-at="2020-10-24T17:52:20 IST" data-provider="homeloanemi" finished-at="2020-10-24T17:52:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[100000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0.25]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0.05]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[2500.0]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[₹ 8,37,482]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [₹ 1,16,42,428] but found [₹ 8,37,482]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [₹ 1,16,42,428] but found [₹ 8,37,482]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at TestCases.Test1.VerifyhomeloanemiData(Test1.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyhomeloanemiData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4368" started-at="2020-10-24T17:52:31 IST" finished-at="2020-10-24T17:52:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="VerifyhomeloanemiData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:TestCases.Test1@101df177]" name="VerifyhomeloanemiData" duration-ms="12524" started-at="2020-10-24T17:52:35 IST" data-provider="homeloanemi" finished-at="2020-10-24T17:52:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[100000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0.25]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0.05]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[2500.0]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[₹ 8,39,966]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyhomeloanemiData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="194" started-at="2020-10-24T17:52:47 IST" finished-at="2020-10-24T17:52:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="VerifyhomeloanemiData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:TestCases.Test1@101df177]" name="VerifyhomeloanemiData" duration-ms="12677" started-at="2020-10-24T17:52:48 IST" data-provider="homeloanemi" finished-at="2020-10-24T17:53:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[100000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0.25]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0.05]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[2500.0]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[₹ 1,92,089]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyhomeloanemiData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4115" started-at="2020-10-24T17:53:00 IST" finished-at="2020-10-24T17:53:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="VerifyhomeloanemiData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:TestCases.Test1@101df177]" name="VerifyhomeloanemiData" duration-ms="10964" started-at="2020-10-24T17:53:04 IST" data-provider="homeloanemi" finished-at="2020-10-24T17:53:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[100000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0.25]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0.05]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[2500.0]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[₹ 12,52,253]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyhomeloanemiData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4133" started-at="2020-10-24T17:53:15 IST" finished-at="2020-10-24T17:53:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="VerifyhomeloanemiData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:TestCases.Test1@101df177]" name="VerifyhomeloanemiData" duration-ms="12828" started-at="2020-10-24T17:53:20 IST" data-provider="homeloanemi" finished-at="2020-10-24T17:53:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[100000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0.25]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0.05]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[2500.0]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[₹ 8,54,358]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyhomeloanemiData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4120" started-at="2020-10-24T17:53:32 IST" finished-at="2020-10-24T17:53:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="VerifyhomeloanemiData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:TestCases.Test1@101df177]" name="VerifyhomeloanemiData" duration-ms="13623" started-at="2020-10-24T17:53:37 IST" data-provider="homeloanemi" finished-at="2020-10-24T17:53:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[100000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0.05]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[2500.0]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[₹ 8,97,358]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyhomeloanemiData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4118" started-at="2020-10-24T17:53:50 IST" finished-at="2020-10-24T17:53:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="VerifyhomeloanemiData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:TestCases.Test1@101df177]" name="VerifyhomeloanemiData" duration-ms="11375" started-at="2020-10-24T17:53:54 IST" data-provider="homeloanemi" finished-at="2020-10-24T17:54:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[100000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0.25]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[2500.0]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[₹ 9,01,358]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyhomeloanemiData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4120" started-at="2020-10-24T17:54:06 IST" finished-at="2020-10-24T17:54:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="VerifyhomeloanemiData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:TestCases.Test1@101df177]" name="VerifyhomeloanemiData" duration-ms="12059" started-at="2020-10-24T17:54:10 IST" data-provider="homeloanemi" finished-at="2020-10-24T17:54:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[100000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10000.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[20.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0.25]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[0.05]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[₹ 2,62,838]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyhomeloanemiData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4106" started-at="2020-10-24T17:54:22 IST" finished-at="2020-10-24T17:54:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="FAIL" signature="VerifyloancalculatorData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:TestCases.Test1@101df177]" name="VerifyloancalculatorData" duration-ms="25972" started-at="2020-10-24T17:54:26 IST" data-provider="loancalculator" finished-at="2020-10-24T17:54:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1000000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[13,15,778]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=86.0.4240.111)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-HL4REAJM', ip: '192.168.1.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_271'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.111, chrome: {chromedriverVersion: 85.0.4183.87 (cd6713ebf92fa..., userDataDir: C:\Users\choud\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58403}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 79cef908ab3bc33b54e086574c720820]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=86.0.4240.111)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-HL4REAJM', ip: '192.168.1.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_271'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.111, chrome: {chromedriverVersion: 85.0.4183.87 (cd6713ebf92fa..., userDataDir: C:\Users\choud\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58403}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 79cef908ab3bc33b54e086574c720820
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at TestCases.Test1.VerifyloancalculatorData(Test1.java:121)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyloancalculatorData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4343" started-at="2020-10-24T17:54:52 IST" finished-at="2020-10-24T17:54:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="FAIL" signature="VerifyloancalculatorData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:TestCases.Test1@101df177]" name="VerifyloancalculatorData" duration-ms="10730" started-at="2020-10-24T17:54:56 IST" data-provider="loancalculator" finished-at="2020-10-24T17:55:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1000000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[13,15,780]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [60,35,066] but found [13,15,780]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [60,35,066] but found [13,15,780]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at TestCases.Test1.VerifyloancalculatorData(Test1.java:140)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyloancalculatorData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="4122" started-at="2020-10-24T17:55:07 IST" finished-at="2020-10-24T17:55:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method status="PASS" signature="VerifyloancalculatorData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:TestCases.Test1@101df177]" name="VerifyloancalculatorData" duration-ms="10655" started-at="2020-10-24T17:55:11 IST" data-provider="loancalculator" finished-at="2020-10-24T17:55:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[-200000.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2,63,156]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyloancalculatorData -->
        <test-method status="PASS" signature="flushReports()[pri:0, instance:TestCases.Test1@101df177]" name="flushReports" is-config="true" duration-ms="139" started-at="2020-10-24T17:55:22 IST" finished-at="2020-10-24T17:55:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- TestCases.Test1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
